#
# A virtual host using mix of IP-, name-, and port-based configuration
#

upstream eclide {
  server node_web:$NODE_PORT;
  keepalive 8;
}

server {
  listen $NGINX_HTTP_PORT;

  server_name $HOSTNAME;

  add_header Strict-Transport-Security "max-age=31536000;" always;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Permitted-Cross-Domain-Policies "none";
  add_header X-Frame-Options "deny";
  add_header X-Content-Type-Options "nosniff";
  add_header Content-Security-Policy "script-src 'self' stackpath.bootstrapcdn.com code.jquery.com cdnjs.cloudflare.com cdn.jsdelivr.net cdn.datatables.net; object-src 'self'";

  location / {
    #proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #proxy_set_header Host ${DOLLAR}http_host;
    #proxy_set_header X-NginX-Proxy true;

    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;

    expires -1;

    proxy_pass http://eclide${DOLLAR}request_uri;
  }

  #return 301 https://${DOLLAR}server_name${DOLLAR}request_uri;
}

#server {
  #listen $NGINX_HTTPS_PORT ssl;

  #server_name $HOSTNAME;

  # NOTE: you would need to create some sort of self-signed SSL for local
  # development if required, the settings below are referencing the production
  # SSL setup, which was configured via LetsEncrypt
  # ssl_certificate /etc/letsencrypt/live/$HOSTNAME/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/$HOSTNAME/privkey.pem;

  #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  #ssl_ciphers HIGH:!aNULL:!MD5;

  #location / {
    #proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #proxy_set_header Host ${DOLLAR}http_host;
    #proxy_set_header X-NginX-Proxy true;

    #proxy_pass http://eclide${DOLLAR}request_uri;
  #}
#}